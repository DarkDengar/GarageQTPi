--- /home/pi/GarageQTPi/main.py	(original)
+++ /home/pi/GarageQTPi/main.py	(refactored)
@@ -6,20 +6,20 @@
 
 from lib.garage import GarageDoor
 
-print "Welcome to GarageBerryPi!"
+print("Welcome to GarageBerryPi!")
 
 # Update the mqtt state topic
 def update_state(value, topic):
-    print "State change triggered: %s -> %s" % (topic, value)
+    print("State change triggered: %s -> %s" % (topic, value))
 
     client.publish(topic, value, retain=True)
 
 # The callback for when the client receives a CONNACK response from the server.
 def on_connect(client, userdata, rc):
-    print "Connected with result code: %s" % mqtt.connack_string(rc)
+    print("Connected with result code: %s" % mqtt.connack_string(rc))
     for config in CONFIG['doors']:
         command_topic = config['command_topic']
-        print "Listening for commands on %s" % command_topic
+        print("Listening for commands on %s" % command_topic)
         client.subscribe(command_topic)
 
 # Execute the specified command for a door
@@ -28,7 +28,7 @@
         doorName = door.name
     except:
         doorName = door.id
-    print "Executing command %s for door %s" % (command, doorName)
+    print("Executing command %s for door %s" % (command, doorName))
     if command == "OPEN" and door.state == 'closed':
         door.open()
     elif command == "CLOSE" and door.state == 'open':
@@ -36,7 +36,7 @@
     elif command == "STOP":
         door.stop()
     else:
-        print "Invalid command: %s" % command
+        print("Invalid command: %s" % command)
 
 with open(os.path.join(os.path.abspath(os.path.dirname(__file__)), 'config.yaml'), 'r') as ymlfile:
     CONFIG = yaml.load(ymlfile)
--- /home/pi/GarageQTPi/lib/eventhook.py	(original)
+++ /home/pi/GarageQTPi/lib/eventhook.py	(refactored)
@@ -15,5 +15,5 @@
 
     def clearObjectHandlers(self, inObject):
         for theHandler in self.__handlers:
-            if theHandler.im_self == inObject:
+            if theHandler.__self__ == inObject:
                 self.removeHandler(theHandler)
--- /home/pi/GarageQTPi/lib/garage.py	(original)
+++ /home/pi/GarageQTPi/lib/garage.py	(refactored)
@@ -1,6 +1,6 @@
 import time
 import RPi.GPIO as GPIO
-from eventhook import EventHook
+from .eventhook import EventHook
 
 
 SHORT_WAIT = .2 #S (200ms)
